{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { createContext, createElement, Component } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createPortal } from 'react-dom';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nvar _React$createContext = /*#__PURE__*/createContext(null),\n  Consumer = _React$createContext.Consumer,\n  Provider = _React$createContext.Provider;\nvar HeadTag = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HeadTag, _React$Component);\n  function HeadTag() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      canUseDOM: false\n    };\n    _this.headTags = null;\n    _this.index = -1;\n    return _this;\n  }\n  var _proto = HeadTag.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n      tag = _this$props.tag,\n      name = _this$props.name,\n      property = _this$props.property;\n    this.setState({\n      canUseDOM: true\n    });\n    this.index = this.headTags.addClientTag(tag, name || property);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var tag = this.props.tag;\n    this.headTags.removeClientTag(tag, this.index);\n  };\n  _proto.render = function render() {\n    var _this2 = this;\n    var _this$props2 = this.props,\n      Tag = _this$props2.tag,\n      rest = _objectWithoutPropertiesLoose(_this$props2, [\"tag\"]);\n    var canUseDOM = this.state.canUseDOM;\n    return /*#__PURE__*/createElement(Consumer, null, function (headTags) {\n      if (headTags == null) {\n        throw Error('<HeadProvider /> should be in the tree');\n      }\n      _this2.headTags = headTags;\n      if (canUseDOM) {\n        if (!headTags.shouldRenderTag(Tag, _this2.index)) {\n          return null;\n        }\n        var ClientComp = /*#__PURE__*/createElement(Tag, rest);\n        return /*#__PURE__*/createPortal(ClientComp, document.head);\n      }\n      var ServerComp = /*#__PURE__*/createElement(Tag, _extends({\n        \"data-rh\": \"\"\n      }, rest));\n      headTags.addServerTag(ServerComp);\n      return null;\n    });\n  };\n  return HeadTag;\n}(Component);\nvar cascadingTags = ['title', 'meta'];\nvar HeadProvider = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HeadProvider, _React$Component);\n  function HeadProvider() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.indices = new Map();\n    _this.state = {\n      addClientTag: function addClientTag(tag, name) {\n        // consider only cascading tags\n        if (cascadingTags.indexOf(tag) !== -1) {\n          _this.setState(function (state) {\n            var _ref;\n            var names = state[tag] || [];\n            return _ref = {}, _ref[tag] = [].concat(names, [name]), _ref;\n          }); // track indices synchronously\n\n          var _assertThisInitialize = _assertThisInitialized(_this),\n            indices = _assertThisInitialize.indices;\n          var index = indices.has(tag) ? indices.get(tag) + 1 : 0;\n          indices.set(tag, index);\n          return index;\n        }\n        return -1;\n      },\n      shouldRenderTag: function shouldRenderTag(tag, index) {\n        if (cascadingTags.indexOf(tag) !== -1) {\n          var names = _this.state[tag]; // eslint-disable-line react/destructuring-assignment\n          // check if the tag is the last one of similar\n\n          return names && names.lastIndexOf(names[index]) === index;\n        }\n        return true;\n      },\n      removeClientTag: function removeClientTag(tag, index) {\n        _this.setState(function (state) {\n          var names = state[tag];\n          if (names) {\n            var _ref2;\n            names[index] = null;\n            return _ref2 = {}, _ref2[tag] = names, _ref2;\n          }\n          return null;\n        });\n      },\n      addServerTag: function addServerTag(tagNode) {\n        var _this$props$headTags = _this.props.headTags,\n          headTags = _this$props$headTags === void 0 ? [] : _this$props$headTags; // tweak only cascading tags\n\n        if (cascadingTags.indexOf(tagNode.type) !== -1) {\n          var index = headTags.findIndex(function (prev) {\n            var prevName = prev.props.name || prev.props.property;\n            var nextName = tagNode.props.name || tagNode.props.property;\n            return prev.type === tagNode.type && prevName === nextName;\n          });\n          if (index !== -1) {\n            headTags.splice(index, 1);\n          }\n        }\n        headTags.push(tagNode);\n      }\n    };\n    return _this;\n  }\n  var _proto = HeadProvider.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var ssrTags = document.head.querySelectorAll(\"[data-rh=\\\"\\\"]\"); // `forEach` on `NodeList` is not supported in Googlebot, so use a workaround\n\n    Array.prototype.forEach.call(ssrTags, function (ssrTag) {\n      return ssrTag.parentNode.removeChild(ssrTag);\n    });\n  };\n  _proto.render = function render() {\n    var _this$props = this.props,\n      headTags = _this$props.headTags,\n      children = _this$props.children;\n    if (typeof window === 'undefined' && Array.isArray(headTags) === false) {\n      throw Error('headTags array should be passed to <HeadProvider /> in node');\n    }\n    return /*#__PURE__*/createElement(Provider, {\n      value: this.state\n    }, children);\n  };\n  return HeadProvider;\n}(Component);\nvar Title = function Title(props) {\n  return /*#__PURE__*/createElement(HeadTag, _extends({\n    tag: \"title\"\n  }, props));\n};\nvar Style = function Style(props) {\n  return /*#__PURE__*/createElement(HeadTag, _extends({\n    tag: \"style\"\n  }, props));\n};\nvar Meta = function Meta(props) {\n  return /*#__PURE__*/createElement(HeadTag, _extends({\n    tag: \"meta\"\n  }, props));\n};\nvar Link = function Link(props) {\n  return /*#__PURE__*/createElement(HeadTag, _extends({\n    tag: \"link\"\n  }, props));\n};\nvar Base = function Base(props) {\n  return /*#__PURE__*/createElement(HeadTag, _extends({\n    tag: \"base\"\n  }, props));\n};\nexport { Base, HeadProvider, Link, Meta, Style, Title };","map":null,"metadata":{},"sourceType":"module"}